#form a sub array from given array such that it's sum is maximum
# Two approaches
class Solution:
    def maxSubArray(self, nums):
        """
        :type nums: List[int]
        :rtype: int
        """
        if not nums:
            return 0
        for i in range(1, len(nums)):
            if nums[i-1] > 0:
                nums[i] += nums[i-1]    
        return max(nums)

# Greedy approach
class Solution:
    def maxSubArray(self, nums: List[int]) -> int:
        if not nums:
            return 0
        
        acc = nums[0]
        max_acc = acc

		 # because we already considered the 0th element above.
        i = 1 
        while i < len(nums):
            x = nums[i]
            
            # Be greedy.
            if acc <= 0 and x > 0:
                acc = x
            else:
                acc += x
            
            # Consider the x because a corner
            # case might be that everything is
            # negative
            max_acc = max(max_acc, acc, x)
            i += 1
        
        return max_acc
